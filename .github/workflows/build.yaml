name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      # Build system for C
      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.14

      # CMake generator
      - name: Setup ninja-build
        uses: seanmiddleditch/gha-setup-ninja@master

      # Cross-compile native libraries
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2

      # Run js/ts scripts
      - name: Set Bun.js
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install multiplatform JDKs
        run: |
          bun quickjs/scripts/setupMultiplatformJdks.ts
          source ~/java-home-vars-github.sh
          echo "Linux X64 JDK: $JAVA_HOME_LINUX_X64"

      - uses: gradle/gradle-build-action@v3.0.0

      - name: Grant execute permission for scripts
        run: |
          chmod +x gradlew
          chmod +x quickjs/native/cmake/zig-ar.sh
          chmod +x quickjs/native/cmake/zig-ranlib.sh

      - name: Build
        run: ./gradlew build

      - name: Run tests (JVM)
        run: ./gradlew :quickjs:jvmTest

      - name: Run tests (Native/Linux-x64)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: ./gradlew :quickjs:linuxX64Test

      - name: Run tests (Native/Windows-x64)
        if: ${{ matrix.os == 'windows-latest' }}
        run: ./gradlew :quickjs:mingwX64Test
